name: SLOW5 C/C++ CI Github

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  ubuntu_14:
    name: ubuntu_14
    runs-on: ubuntu-16.04
    container: ubuntu:14.04
    steps:
    - name: install git
      run: sudo apt-get install -y software-properties-common && sudo add-apt-repository ppa:git-core/ppa && sudo apt-get update -y && sudo apt-get install git -y
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: sudo apt-get update && sudo apt-get install -y zlib1g-dev libhdf5-dev gcc g++ autoconf automake make
    - name: env
      run: lsb_release -a &&  ldd --version && gcc --version && g++ --version
    - name: build
      run: autoreconf && ./configure && make -j8
    - name: test
      run: make test
  ubuntu_16:
    name: Ubuntu 16
    runs-on: ubuntu-16.04
    steps:
    - name: install git
      run: sudo add-apt-repository ppa:git-core/ppa && sudo apt-get update -y && sudo apt-get install git -y
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: sudo apt-get update && sudo apt-get install -y zlib1g-dev libhdf5-dev
    - name: build
      run: autoreconf && ./configure && make -j8
    - name: test
      run: make test
  ubuntu_18:
    name: Ubuntu 18 hdf5 install script
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: sudo apt-get update && sudo apt-get install -y zlib1g-dev valgrind
    - name: build
      run: autoreconf && ./scripts/install-hdf5.sh && ./configure --enable-localhdf5 && make -j8
    - name: test
      run: make test
    - name: test valgrind
      run: ./test/test.sh mem
  ubuntu_20:
    name: Ubuntu 20
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: sudo apt-get update && sudo apt-get install -y zlib1g-dev libhdf5-dev
    - name: build-gcc
      run: autoreconf && ./configure && make -j8
    - name: test-gcc
      run: make test
    - name: build-clang
      run: autoreconf && ./configure && make CC=clang CXX=clang++ -j8
    - name: test-clang
      run: make test
  os_x:
    name: OSX
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: brew install hdf5 autoconf automake
    - name: build
      run: autoreconf --install  && ./configure && make -j8
    - name: test
      run: make test
  arm64:
    name: ubuntu arm
    runs-on: ubuntu-latest
    steps:
    - run: docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - uses: docker://multiarch/ubuntu-core:arm64-bionic
      with:
        args: 'uname -a'
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: docker://multiarch/ubuntu-core:arm64-bionic
      with:
        args: >
          bash -c "apt-get update &&
          apt-get install -y zlib1g-dev gcc make zlib1g-dev libhdf5-dev g++ autoconf automake &&
          ldd --version && gcc --version &&
          autoreconf && ./configure && make && make test
  # os_x2:
  #   name: OSX hdf5 hdf5 install script
  #   runs-on: macos-10.15
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       submodules: recursive
  #       ssh-key: ${{ secrets.SUBMODULE_CONTENT_PULL_KEY }}
  #   - name: install packages
  #     run: brew install gcc autoconf automake
  #   - name: build
  #     run: autoreconf --install && CC=gcc CXX=g++ CFLAGS="-Wno-implicit-function-declaration" ./scripts/install-hdf5.sh && ./configure --enable-localhdf5 && make -j8
  #   - name: test
  #     run: make test
