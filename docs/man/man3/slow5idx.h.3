.TH "src/slow5idx.h" 3 "Wed Oct 14 2020" "slow5" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/slow5idx.h \- SLOW5 random access\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'slow5\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBformat_map\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fB__slow5idx_t\fP \fBslow5idx_t\fP"
.br
.RI "Opaque structure representing SLOW5 index\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBslow5idx_format_options\fP { \fBSLOW5IDX_ASCII\fP, \fBSLOW5IDX_BINARY\fP, \fBSLOW5IDX_GZIP\fP }"
.br
.RI "File format to be dealing with\&. "
.ti -1c
.RI "enum \fBslow5idx_load_options\fP { \fBSLOW5IDX_CREATE\fP = 0x01 }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBslow5idx_build3\fP (const char *fn, const char *fnslow5idx, const char *fngzi)"
.br
.RI "Build index for a SLOW5\&. "
.ti -1c
.RI "int \fBslow5idx_build\fP (const char *fn)"
.br
.RI "Build index for a SLOW5\&. "
.ti -1c
.RI "void \fBslow5idx_destroy\fP (\fBslow5idx_t\fP *slow5idx)"
.br
.RI "Destroy a slow5idx_t struct\&. "
.ti -1c
.RI "\fBslow5idx_t\fP * \fBslow5idx_load3\fP (const char *fn, const char *fnslow5idx, const char *fngzi, int flags)"
.br
.RI "Load SLOW5 indexes\&. "
.ti -1c
.RI "\fBslow5idx_t\fP * \fBslow5idx_load\fP (const char *fn)"
.br
.RI "Load index from 'fn\&.s5i'\&. "
.ti -1c
.RI "char * \fBslow5idx_fetch\fP (const \fBslow5idx_t\fP *slow5idx, const char *reg, int *len)"
.br
.RI "Fetch the sequence in a region\&. "
.in -1c
.SH "Detailed Description"
.PP 
SLOW5 random access\&. 


.PP
\fBAuthor\fP
.RS 4
Hasindu Gamaarachchi hasindu@garvan.org.au 
.PP
Sasha Jenner jenner.sasha@gmail.com 
.RE
.PP
\fBDate\fP
.RS 4
14/10/2020
.RE
.PP
adapted from htslib/faidx\&.h
.PP
Index SLOW5 files and extract the record for a given read ID\&.
.PP
The SLOW5 file index columns for SLOW5 are:
.IP "\(bu" 2
read ID
.IP "\(bu" 2
offset: number of bytes to skip to get to the start of the line from the beginning of the file
.IP "\(bu" 2
len: the size of the line in bytes (including 
.br
) 
.PP

.SH "Function Documentation"
.PP 
.SS "int slow5idx_build (const char * fn)"

.PP
Build index for a SLOW5\&. 
.PP
\fBParameters\fP
.RS 4
\fIfn\fP SLOW5 file name 
.RE
.PP
\fBReturns\fP
.RS 4
0 on success; or -1 on failure
.RE
.PP
File 'fn\&.s5i' will be generated\&. This function is equivalent to 
.SS "int slow5idx_build3 (const char * fn, const char * fnslow5idx, const char * fngzi)"

.PP
Build index for a SLOW5\&. 
.PP
\fBParameters\fP
.RS 4
\fIfn\fP SLOW5 file name 
.br
\fIfnslow5idx\fP Name of \&.s5i file to build\&. 
.br
\fIfngzi\fP //unused at the moment\&. 
.RE
.PP
\fBReturns\fP
.RS 4
0 on success; or -1 on failure
.RE
.PP
If fnslow5idx is NULL, '\&.s5i' will be appended to fn to make the SLOW5 index file name\&. 
.SS "char* slow5idx_fetch (const \fBslow5idx_t\fP * slow5idx, const char * reg, int * len)"

.PP
Fetch the sequence in a region\&. 
.PP
\fBParameters\fP
.RS 4
\fIslow5idx\fP Pointer to the slow5idx_t struct 
.br
\fIreg\fP Region in the format 'chr2:20,000-30,000' 
.br
\fIlen\fP Length of the region; -2 if seq not present, -1 general error 
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to the sequence; \fCNULL\fP on failure
.RE
.PP
The returned sequence is allocated by \fCmalloc()\fP family and should be destroyed by end users by calling \fCfree()\fP on it\&. 
.SS "\fBslow5idx_t\fP* slow5idx_load (const char * fn)"

.PP
Load index from 'fn\&.s5i'\&. 
.PP
\fBParameters\fP
.RS 4
\fIfn\fP File name of the SLOW5 file 
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to a slow5idx_t struct on success, NULL on failure\&.
.RE
.PP
This function is equivalent to slow5idx_load3(fn, NULL, NULL, SLOW5IDX_CREATE); 
.SS "\fBslow5idx_t\fP* slow5idx_load3 (const char * fn, const char * fnslow5idx, const char * fngzi, int flags)"

.PP
Load SLOW5 indexes\&. 
.PP
\fBParameters\fP
.RS 4
\fIfn\fP File name of the SLOW5 file\&. 
.br
\fIfnslow5idx\fP File name of the SLOW5 index\&. 
.br
\fIfngzi\fP unsused at the moment 
.br
\fIflags\fP Option flags to control index file caching and creation\&. 
.RE
.PP
\fBReturns\fP
.RS 4
Pointer to a slow5idx_t struct on success, NULL on failure\&.
.RE
.PP
If fnslow5idx is NULL, '\&.s5i' will be appended to fn to make the SLOW5 index file name\&.
.PP
If (flags & SLOW5IDX_CREATE) is true, the index files will be built using \fBslow5idx_build3()\fP if they are not already present\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for slow5 from the source code\&.
